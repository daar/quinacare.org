---
// Props (Optional: Custom Placeholder)
const { placeholder = "Search..." } = Astro.props;
---

<div class="relative flex items-center">
  <!-- Search Button -->
  <button id="search-button" class="p-2 focus:outline-none" aria-label="Search">
    <svg id="loupe-icon" class="w-5 h-5 text-black transition-all duration-500 ease-in-out" 
         fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
      <circle cx="11" cy="11" r="8"></circle>
      <line x1="16" y1="16" x2="22" y2="22"></line>
    </svg>
  </button>

  <!-- Search Input -->
  <div class="relative overflow-hidden">
    <input
      type="text"
      id="search-input"
      class="max-w-0 opacity-0 transition-all duration-500 ease-out bg-transparent 
             text-black border-b-2 border-gray-500 focus:outline-none px-2 py-1"
      placeholder={placeholder}
    />
  </div>
</div>

<!-- JavaScript for Search -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const searchButton = document.getElementById("search-button");
    const searchInput = document.getElementById("search-input");

    searchButton.addEventListener("click", () => {
      if (searchInput.classList.contains("max-w-0")) {
        searchInput.classList.remove("max-w-0", "opacity-0");
        searchInput.classList.add("max-w-32");
        setTimeout(() => searchInput.classList.add("opacity-100"), 100); // Delay opacity for smooth effect
        searchInput.focus();
      } else {
        searchInput.classList.remove("max-w-32", "opacity-100");
        searchInput.classList.add("max-w-0");
        setTimeout(() => searchInput.classList.add("opacity-0"), 300); // Delay fade-out for smooth collapse
      }
    });
  });
</script>
