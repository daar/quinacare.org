---
const { title, value, icon, description } = Astro.props;
---

<div
    class="metric-card bg-white text-black p-6 rounded-lg shadow-md flex flex-col items-center transition-transform transform hover:scale-105"
>
    <div class="icon w-12 h-12 text-gray-700" set:html={icon} />
    <h2 class="text-lg font-bold mt-2">{title}</h2>
    <p class="text-2xl font-semibold count-value" data-value={value}>0</p>
    <span class="text-sm text-gray-500">{description}</span>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const counters = document.querySelectorAll(".count-value");

        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        const counter = entry.target;
                        const targetValue = parseInt(counter.dataset.value, 10);
                        let start = 0;
                        const duration = 3000;
                        const step = targetValue / (duration / 16);

                        const updateCounter = () => {
                            start += step;
                            if (start < targetValue) {
                                counter.innerText = Math.floor(start);
                                requestAnimationFrame(updateCounter);
                            } else {
                                counter.innerText = targetValue; // Ensure exact final value
                            }
                        };

                        updateCounter();
                        observer.unobserve(counter); // Stop observing after counting
                    }
                });
            },
            { threshold: 0.5 },
        );

        counters.forEach((counter) => observer.observe(counter));
    });
</script>
